"use strict";
/**
 * @module TelemetryDecorators
 * @description Method decorators for OpenTelemetry tracing
 *
 * This module re-exports telemetry decorators from the telemetry module for
 * backward compatibility. New code should import directly from the telemetry
 * module instead.
 *
 * @deprecated Import from '../telemetry' directly instead
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpanStatusCode = exports.TraceClass = exports.Trace = void 0;
// This file is maintained for backward compatibility
// New code should import from '../telemetry' directly
/**
 * Method decorator for tracing method execution
 *
 * @deprecated Import from '../telemetry/decorators' directly instead
 */
var decorators_1 = require("../telemetry/decorators");
Object.defineProperty(exports, "Trace", { enumerable: true, get: function () { return decorators_1.Trace; } });
Object.defineProperty(exports, "TraceClass", { enumerable: true, get: function () { return decorators_1.TraceClass; } });
/**
 * Status codes for OpenTelemetry spans
 *
 * @deprecated Import from '@opentelemetry/api' directly instead
 */
// Re-export OpenTelemetry types for backward compatibility
var api_1 = require("@opentelemetry/api");
Object.defineProperty(exports, "SpanStatusCode", { enumerable: true, get: function () { return api_1.SpanStatusCode; } });
//# sourceMappingURL=telemetry.js.map