import type { UIMessage } from "ai";
import { Apps } from "./api/apps";
import { Artifacts } from "./api/artifacts";
import { Debug } from "./api/debug";
import { Evals } from "./api/evals";
import { Events } from "./api/events";
import { Sessions } from "./api/sessions";
export interface AdkClientOptions {
    appName?: string;
    baseUrl?: string;
    userId: string;
}
/**
 * The main entry point for interacting with the ADK API.
 * It provides methods to manage applications, sessions, artifacts, evaluations,
 * and events.
 *
 * @example
 * const adkClient = new AdkClient({
 *   appName: "myApp",
 *   baseUrl: "https://api.example.com",
 *   userId: "user123",
 * });
 */
export declare class AdkClient {
    private readonly appName;
    private readonly baseUrl;
    private readonly userId;
    readonly sessions: Sessions;
    readonly artifacts: Artifacts;
    readonly evals: Evals;
    readonly apps: Apps;
    readonly debug: Debug;
    readonly events: Events;
    constructor(options: AdkClientOptions);
    private request;
    private requestJson;
    private transformMessagesToAdkNewMessage;
    runSse(sessionId: string, messages: UIMessage[]): Promise<Response>;
    run(sessionId: string, messages: UIMessage[]): Promise<Response>;
}
export * from "./types";
