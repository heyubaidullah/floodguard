"use strict";
/**
 * @module Telemetry
 * @description OpenTelemetry integration for the A2A protocol
 *
 * This module provides OpenTelemetry integration for the A2A protocol, including
 * configuration, service initialization, and decorators for tracing method execution.
 * It enables distributed tracing and metrics collection for A2A protocol operations.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.metrics = exports.trace = exports.context = void 0;
/**
 * Configuration options for OpenTelemetry
 */
__exportStar(require("./config"), exports);
/**
 * Telemetry service for initializing and managing OpenTelemetry
 */
__exportStar(require("./service"), exports);
/**
 * Decorators for adding OpenTelemetry tracing to methods and classes
 */
__exportStar(require("./decorators"), exports);
/**
 * Re-export OpenTelemetry types and functions for convenience
 *
 * These exports provide direct access to the OpenTelemetry API without
 * requiring consumers to add @opentelemetry/api as a direct dependency.
 */
var api_1 = require("@opentelemetry/api");
/** OpenTelemetry context API for managing context propagation */
Object.defineProperty(exports, "context", { enumerable: true, get: function () { return api_1.context; } });
/** OpenTelemetry trace API for creating and managing spans */
Object.defineProperty(exports, "trace", { enumerable: true, get: function () { return api_1.trace; } });
/** OpenTelemetry metrics API for recording metrics */
Object.defineProperty(exports, "metrics", { enumerable: true, get: function () { return api_1.metrics; } });
//# sourceMappingURL=index.js.map