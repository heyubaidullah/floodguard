import type { AdkGetEvalResponse, AdkGetEvalResultResponse, AdkRunEvalResponse, ApiClient } from "../types";
export declare class Evals {
    private client;
    constructor(client: ApiClient);
    /**
     * Adds a session to an evaluation set.
     * @param evalSetId The ID of the evaluation set to add the session to.
     * @param sessionId The ID of the session to add.
     * @param evalId The ID of the evaluation to associate with the session.
     * @param userId The ID of the user who owns the session.
     * @returns The ID of the added session in the evaluation set.
     */
    addSessionToEvalSet(evalSetId: string, sessionId: string, evalId: string, userId: string): Promise<string>;
    /**
     * Creates a new evaluation set.
     * @param evalSetId The ID of the evaluation set to create.
     * @returns The ID of the created evaluation set.
     */
    createEvalSet(evalSetId: string): Promise<string>;
    /**
     * Deletes an evaluation from a specific evaluation set.
     * @param evalSetId The ID of the evaluation set to delete from.
     * @param evalCaseId The ID of the evaluation to delete.
     * @returns The ID of the deleted evaluation.
     */
    deleteEval(evalSetId: string, evalCaseId: string): Promise<string>;
    /**
     * Gets an evaluation from a specific evaluation set.
     * @param evalSetId The ID of the evaluation set to get the evaluation from.
     * @param evalCaseId The ID of the evaluation to get.
     * @returns The requested evaluation.
     */
    getEval(evalSetId: string, evalCaseId: string): Promise<AdkGetEvalResponse>;
    /**
     * Gets the result of a specific evaluation.
     * @param evalResultId The ID of the evaluation result to get.
     * @returns The requested evaluation result.
     */
    getEvalResult(evalResultId: string): Promise<AdkGetEvalResultResponse>;
    /**
     * Lists all evaluation results.
     * @returns A list of all evaluation results.
     */
    listEvalResults(): Promise<unknown>;
    /**
     * Lists all evaluation sets.
     * @returns A list of all evaluation sets available to the user.
     */
    listEvalSets(): Promise<string[]>;
    /**
     * Lists all evaluations in a specific evaluation set.
     * @param evalSetId The ID of the evaluation set to list evaluations for.
     * @returns A list of all evaluations in the specified evaluation set.
     */
    listEvalsInEvalSet(evalSetId: string): Promise<unknown>;
    /**
     * Runs an evaluation for a specific evaluation set.
     * @param evalSetId The ID of the evaluation set to run.
     * @returns The response from the API.
     */
    runEval(evalSetId: string): Promise<AdkRunEvalResponse>;
    /**
     * Updates an evaluation in a specific evaluation set.
     * @param evalSetId The ID of the evaluation set to update.
     * @param evalCaseId The ID of the evaluation to update.
     * @param data The updated evaluation data.
     * @returns The updated evaluation.
     */
    updateEval(evalSetId: string, evalCaseId: string, data: unknown): Promise<AdkGetEvalResponse>;
}
