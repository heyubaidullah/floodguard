"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Debug = void 0;
class Debug {
    constructor(client) {
        this.client = client;
    }
    /**
     * Gets the trace for a specific event.
     * @param eventId The ID of the event to get the trace for.
     * @returns The trace information for the specified event.
     */
    getTrace(eventId) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.requestJson(`/debug/trace/${eventId}`);
        });
    }
    /**
     * Gets the trace for a specific session.
     * @param sessionId The ID of the session to get the trace for.
     * @returns The trace information for the specified session.
     */
    getSessionTrace(sessionId) {
        return __awaiter(this, void 0, void 0, function* () {
            return this.client.requestJson(`/debug/trace/session/${sessionId}`);
        });
    }
}
exports.Debug = Debug;
//# sourceMappingURL=debug.js.map